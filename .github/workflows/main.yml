name: YouTube Shorts Automation
permissions:
  id-token: write
  contents: read
on:
  workflow_dispatch: # Manual trigger
  schedule:
    - cron: '0 3,7,12,18,22 * * *'  # 수정: 마지막에 * 하나 더 추가
jobs:
  build-and-run:
    runs-on: ubuntu-latest
    timeout-minutes: 60 # Set a timeout for the job to prevent infinite runs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install system dependencies (ffmpeg)
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg
      - name: Install Python dependencies
        run: |
          pip cache purge # Clear pip cache to ensure fresh installation
          python -m pip install --upgrade pip setuptools wheel
          pip install --no-cache-dir -r requirements.txt # Force reinstall from requirements.txt
      - name: Configure GCP Service Account Key
        # JSON 파일 유효성 검사 추가
        run: |
          echo '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}' > gcp_key.json
          # JSON 파일 유효성 검사
          if ! python -c "import json; json.load(open('gcp_key.json'))" 2>/dev/null; then
            echo "ERROR: GCP_SERVICE_ACCOUNT_KEY is not valid JSON"
            echo "First few characters of the key:"
            head -c 100 gcp_key.json
            exit 1
          fi
          echo "GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcp_key.json" >> $GITHUB_ENV
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
      - name: Run YouTube Automation
        run: |
          python -m src.main
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          OPENAI_KEYS_JSON: ${{ secrets.OPENAI_KEYS_JSON }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          ELEVENLABS_API_KEY: ${{ secrets.ELEVENLABS_API_KEY }}
          ELEVENLABS_VOICE_ID: ${{ secrets.ELEVENLABS_VOICE_ID }}
          YOUTUBE_OAUTH_CREDENTIALS: ${{ secrets.YOUTUBE_OAUTH_CREDENTIALS }}
          GCP_BUCKET_NAME: ${{ secrets.GCP_BUCKET_NAME }}
          NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
          PEXELS_API_KEY: ${{ secrets.PEXELS_API_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      - name: Clean up sensitive files
        if: always()
        run: |
          rm -f gcp_key.json
