name: GCP Youtube Automation CI/CD

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: 'read'
  id-token: 'write'

env:
  SERVICE_NAME: gcp-youtube-automation
  PROJECT_ID: youtube-fully-automated
  GCP_WORKLOAD_IDENTITY_PROVIDER: projects/94662874801/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions
  ARTIFACT_REGISTRY: us-central1-docker.pkg.dev/youtube-fully-automated/gcp-youtube-automation
  REGION: us-central1
  GCP_SERVICE_ACCOUNT: github-actions-sa@youtube-fully-automated.iam.gserviceaccount.com
  CLOUD_RUN_URL: https://gcp-youtube-automation-abcdefg-uc.a.run.app # üëà Î≥∏Ïù∏Ïùò Cloud Run URLÎ°ú Î≥ÄÍ≤ΩÌïòÏÑ∏Ïöî!

jobs:
  build-deploy-and-run:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: üìÅ Checkout Repository
        uses: actions/checkout@v4

      - name: üîê Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}
          audience: 'https://token.actions.githubusercontent.com'

      - name: ‚öôÔ∏è Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: ü§´ Fetch Secrets from GCP Secret Manager
        id: get-secrets
        run: |
          echo "PEXELS_API_KEY=$(gcloud secrets versions access latest --secret=PEXELS_API_KEY)" >> $GITHUB_ENV
          echo "YOUTUBE_CLIENT_ID=$(gcloud secrets versions access latest --secret=YOUTUBE_CLIENT_ID)" >> $GITHUB_ENV
          echo "YOUTUBE_CLIENT_SECRET=$(gcloud secrets versions access latest --secret=YOUTUBE_CLIENT_SECRET)" >> $GITHUB_ENV
          echo "YOUTUBE_REFRESH_TOKEN=$(gcloud secrets versions access latest --secret=YOUTUBE_REFRESH_TOKEN)" >> $GITHUB_ENV
          echo "OPENAI_API_KEYS=$(gcloud secrets versions access latest --secret=OPENAI_API_KEYS)" >> $GITHUB_ENV
          echo "GEMINI_API_KEY=$(gcloud secrets versions access latest --secret=GEMINI_API_KEY)" >> $GITHUB_ENV
          echo "ELEVENLABS_API_KEY=$(gcloud secrets versions access latest --secret=ELEVENLABS_API_KEY)" >> $GITHUB_ENV

      - name: üê≥ Configure Docker
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: üèóÔ∏è Build & Push Docker Image
        run: |
          docker build -t ${{ env.ARTIFACT_REGISTRY }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
          docker push ${{ env.ARTIFACT_REGISTRY }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

      - name: üöÄ Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.ARTIFACT_REGISTRY }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --service-account=${{ env.GCP_SERVICE_ACCOUNT }} \
            --min-instances=0 \
            --max-instances=1 \
            --cpu=1 \
            --memory=512Mi \
            --set-env-vars="ENVIRONMENT=production" \
            --update-secrets=PEXELS_API_KEY=PEXELS_API_KEY:latest \
            --update-secrets=YOUTUBE_CLIENT_ID=YOUTUBE_CLIENT_ID:latest \
            --update-secrets=YOUTUBE_CLIENT_SECRET=YOUTUBE_CLIENT_SECRET:latest \
            --update-secrets=YOUTUBE_REFRESH_TOKEN=YOUTUBE_REFRESH_TOKEN:latest \
            --update-secrets=OPENAI_API_KEYS=OPENAI_API_KEYS:latest \
            --update-secrets=GEMINI_API_KEY=GEMINI_API_KEY:latest \
            --update-secrets=ELEVENLABS_API_KEY=ELEVENLABS_API_KEY:latest

      - name: üé¨ Run YouTube Shorts Generator (Optional, if needed here)
        run: |
          echo "‚ñ∂Ô∏è Generating content..."
          python scripts/content_generator.py \
            --pexels-key "${{ env.PEXELS_API_KEY }}" \
            --openai-key "${{ env.OPENAI_API_KEYS }}" \
            --gemini-key "${{ env.GEMINI_API_KEY }}"

          echo "üì§ Uploading to YouTube..."
          python scripts/uploader.py \
            --client-id "${{ env.YOUTUBE_CLIENT_ID }}" \
            --client-secret "${{ env.YOUTUBE_CLIENT_SECRET }}" \
            --refresh-token "${{ env.YOUTUBE_REFRESH_TOKEN }}"
