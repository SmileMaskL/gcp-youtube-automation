name: YouTube Automation CI/CD

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  SERVICE_NAME: gcp-youtube-automation
  REGION: us-central1
  PROJECT_ID: youtube-fully-automated
  WORKLOAD_IDENTITY_PROVIDER: "projects/94662874801/locations/global/workloadIdentityPools/github-actions-pool/providers/github-provider-v1"
  audience: "https://token.actions.githubusercontent.com"
  SERVICE_ACCOUNT: github-actions-sa@youtube-fully-automated.iam.gserviceaccount.com

permissions:
  contents: read
  id-token: write

jobs:
  youtube-automation:
    runs-on: ubuntu-latest

    steps:
      - name: ‚úÖ Checkout repository
        uses: actions/checkout@v4

      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: üîê Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          token_format: access_token
          export_environment_variables: true
          create_credentials_file: true
          universe: googleapis.com
          cleanup_credentials: true
          access_token_lifetime: 3600s
          id_token_include_email: false

      - name: ‚òÅÔ∏è Setup gcloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: üì• Load secrets from Secret Manager
        run: |
          declare -A secret_map=(
            ["OPENAI_API_KEY"]="openai-api-keys"
            ["GEMINI_API_KEY"]="gemini-api-key"
            ["ELEVENLABS_API_KEY"]="elevenlabs-api-key"
            ["YOUTUBE_CREDENTIALS"]="youtube-oauth-credentials"
            ["STORAGE_BUCKET"]="storage-bucket-name"
            ["PEXELS_API_KEY"]="PEXELS_API_KEY"
          )
          for env_var in "${!secret_map[@]}"; do
            secret_name=${secret_map[$env_var]}
            secret_value=$(gcloud secrets versions access latest \
              --secret="$secret_name" --project="${{ env.PROJECT_ID }}" \
              --format="get(payload.data)" | tr '_-' '/+' | base64 -d)
            echo "$env_var=$secret_value" >> $GITHUB_ENV
          done

      - name: üì¶ Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: ‚ñ∂Ô∏è Run content generator
        run: python3 src/content_generator.py

      - name: ‚ñ∂Ô∏è Run video creator
        run: python3 src/video_creator.py

      - name: ‚ñ∂Ô∏è Run thumbnail generator
        run: python3 src/thumbnail_generator.py

      - name: ‚ñ∂Ô∏è Run YouTube uploader
        run: python3 src/youtube_uploader.py

      - name: ‚òÅÔ∏è Trigger Cloud Run Job (optional)
        if: always()
        run: |
          gcloud run jobs run ${{ env.SERVICE_NAME }} \
            --region ${{ env.REGION }} \
            --project ${{ env.PROJECT_ID }}
