name: YouTube Shorts Automation
permissions:
  id-token: write
  contents: read

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3,7,12,18,22 * * *'

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install system dependencies (ffmpeg)
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Install Python dependencies
        run: |
          pip cache purge
          python -m pip install --upgrade pip setuptools wheel
          pip install --no-cache-dir -r requirements.txt

      - name: Create GCP credentials file
        run: |
          echo "$GCP_SERVICE_ACCOUNT_KEY" > gcp_key.json
          python -c "import json; json.load(open('gcp_key.json'))" || {
            echo '❌ GCP_SERVICE_ACCOUNT_KEY is not valid JSON';
            head -c 200 gcp_key.json;
            exit 1;
          }
          echo "GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcp_key.json" >> $GITHUB_ENV
        env:
          GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Run YouTube Automation
        run: |
          python -m src.main
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          OPENAI_KEYS_JSON: ${{ secrets.OPENAI_KEYS_JSON }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          ELEVENLABS_API_KEY: ${{ secrets.ELEVENLABS_API_KEY }}
          ELEVENLABS_VOICE_ID: ${{ secrets.ELEVENLABS_VOICE_ID }}
          YOUTUBE_OAUTH_CREDENTIALS: ${{ secrets.YOUTUBE_OAUTH_CREDENTIALS }}
          GCP_BUCKET_NAME: ${{ secrets.GCP_BUCKET_NAME }}
          NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
          PEXELS_API_KEY: ${{ secrets.PEXELS_API_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}

      - name: Clean up sensitive files
        if: always()
        run: rm -f gcp_key.json
