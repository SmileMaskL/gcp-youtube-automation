name: GCP Youtube Automation CI/CD

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: 'read'
  id-token: 'write'

env:
  SERVICE_NAME: gcp-youtube-automation
  IMAGE_NAME: gcp-youtube-automation
  PROJECT_ID: youtube-fully-automated
  ARTIFACT_REGISTRY: us-central1-docker.pkg.dev/youtube-fully-automated/gcp-youtube-automation
  REGION: us-central1
  CLOUD_RUN_URL: https://gcp-youtube-automation-abcdefg-uc.a.run.app
  GITHUB_AUDIENCE: https://token.actions.githubusercontent.com

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: üìÅ Checkout
        uses: actions/checkout@v4

      - name: üîê Authenticate to GCP via Workload Identity
        uses: google-github-actions/auth@v2
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}

      - name: ‚öôÔ∏è Setup SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Authenticate Docker to Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.ARTIFACT_REGISTRY }}

      - name: üê≥ Build & Push Docker Image
        run: |
          docker build -t ${{ env.ARTIFACT_REGISTRY }}/${{ env.IMAGE_NAME }}:$GITHUB_SHA .
          docker push ${{ env.ARTIFACT_REGISTRY }}/${{ env.IMAGE_NAME }}:$GITHUB_SHA

      - name: üöÄ Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.ARTIFACT_REGISTRY }}/${{ env.IMAGE_NAME }}:$GITHUB_SHA \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --min-instances=0 \
            --max-instances=1 \
            --cpu=1 \
            --memory=512Mi \
            --set-env-vars="PEXELS_API_KEY=${{ secrets.PEXELS_API_KEY }}" \
            --set-env-vars="YOUTUBE_CLIENT_ID=${{ secrets.YOUTUBE_CLIENT_ID }}" \
            --set-env-vars="YOUTUBE_CLIENT_SECRET=${{ secrets.YOUTUBE_CLIENT_SECRET }}" \
            --set-env-vars="YOUTUBE_REFRESH_TOKEN=${{ secrets.YOUTUBE_REFRESH_TOKEN }}" \
            --set-env-vars="OPENAI_API_KEYS=${{ secrets.OPENAI_API_KEYS }}" \
            --set-env-vars="GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" \
            --set-env-vars="ELEVENLABS_API_KEY=${{ secrets.ELEVENLABS_API_KEY }}" \
            --set-env-vars="ENVIRONMENT=production"

      - name: üé¨ Generate & Upload Content
        run: |
          python scripts/content_generator.py ...
          python scripts/uploader.py ...

      - name: üì° Call Cloud Run Endpoint
        run: |
          ID_TOKEN=$(gcloud auth print-identity-token)
          curl -X POST -H "Authorization: Bearer $ID_TOKEN" ${{ env.CLOUD_RUN_URL }}/status -d '{"action":"check"}'

      - name: üßπ Cleanup
        if: always()
        run: ./cleanup-repo-fixed.sh
