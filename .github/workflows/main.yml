name: Deploy to GCP App Engine and Trigger Automation

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 15,18,22,3,9,13 * * *'

env:
  PROJECT_ID: youtube-full-automated
  GCP_REGION: us-central1

jobs:
  deploy-and-trigger:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Configure GCP credentials
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/${{ env.PROJECT_ID }}/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
          service_account: 'github-actions-sa@${{ env.PROJECT_ID }}.iam.gserviceaccount.com'

      - name: Deploy to App Engine
        id: deploy
        uses: google-github-actions/deploy-appengine@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Get App Engine service URL
        id: get_url
        run: |
          SERVICE_URL=$(gcloud app services describe default --project ${{ env.PROJECT_ID }} --format="value(defaultHostname)")
          echo "APP_URL=https://${SERVICE_URL}" >> $GITHUB_ENV

      - name: Trigger App Engine automation endpoint
        env:
          TRIGGER_ID: ${{ secrets.TRIGGER_ID }}
        run: |
          if [ -z "$APP_URL" ]; then
            echo "Error: App Engine URL not found"
            exit 1
          fi
          echo "Triggering automation at: $APP_URL/run"
          response=$(curl -s -o /dev/null -w "%{http_code}" -X POST "$APP_URL/run" \
            -H "Content-Type: application/json" \
            -d '{"trigger": "github_actions", "trigger_id": "'$TRIGGER_ID'"}')
          
          if [ "$response" -eq 202 ]; then
            echo "✅ Automation triggered"
          elif [ "$response" -eq 429 ]; then
            echo "⚠️ Already running"
          else
            echo "❌ Failed with status: $response"
            exit 1
          fi
