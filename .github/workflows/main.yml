name: YouTube Auto Upload Pipeline

on:
  workflow_dispatch:

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write  # Workload Identity Federation 용

    steps:
      - uses: actions/checkout@v3

      - id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: my-service-account@youtube-fully-automated.iam.gserviceaccount.com

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Load OpenAI API keys from Secret Manager
        id: load_openai_keys
        run: |
          OPENAI_KEYS_JSON=$(gcloud secrets versions access latest --secret=openai-api-keys --project=youtube-fully-automated)
          echo "OPENAI_KEYS_JSON=$OPENAI_KEYS_JSON" >> $GITHUB_ENV

      - name: Load other API keys from Secret Manager
        id: load_other_keys
        run: |
          for secret in gemini-api-key elevenlabs-api-key pexels-api-key youtube-oauth-credentials; do
            val=$(gcloud secrets versions access latest --secret=$secret --project=youtube-fully-automated)
            # 환경변수 이름은 SECRET명에서 '-'를 '_'로 변경 후 대문자 변환
            env_name=$(echo $secret | tr '[:lower:]-' '[:upper:]_')
            echo "$env_name=$val" >> $GITHUB_ENV
          done

      - name: Run main.py
        env:
          OPENAI_KEYS_JSON: ${{ env.OPENAI_KEYS_JSON }}
          GEMINI_API_KEY: ${{ env.GEMINI_API_KEY }}
          ELEVENLABS_API_KEY: ${{ env.ELEVENLABS_API_KEY }}
          PEXELS_API_KEY: ${{ env.PEXELS_API_KEY }}
          YOUTUBE_OAUTH_CREDENTIALS: ${{ env.YOUTUBE_OAUTH_CREDENTIALS }}
        run: |
          python src/main.py
