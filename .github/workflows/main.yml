name: YouTube Automation Pipeline

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 12 * * *'  # 매일 한국 시간 21시 실행

env:
  PROJECT_ID: youtube-fully-automated
  SERVICE_NAME: gcp-youtube-automation
  REGION: us-central1
  ARTIFACT_REGISTRY: us-central1-docker.pkg.dev

jobs:
  deploy-and-run:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Google Auth
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
        project_id: ${{ env.PROJECT_ID }}
        audience: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}  # audience 추가!

    - name: Setup GCloud
      uses: google-github-actions/setup-gcloud@v1

    - name: Build Docker
      run: |-
        gcloud auth configure-docker $ARTIFACT_REGISTRY
        docker build -t $ARTIFACT_REGISTRY/$PROJECT_ID/$SERVICE_NAME:latest .

    - name: Push Docker
      run: docker push $ARTIFACT_REGISTRY/$PROJECT_ID/$SERVICE_NAME:latest

    - name: Deploy to Cloud Run
      run: |-
        gcloud run deploy $SERVICE_NAME \
          --image $ARTIFACT_REGISTRY/$PROJECT_ID/$SERVICE_NAME:latest \
          --region $REGION \
          --platform managed \
          --allow-unauthenticated \
          --min-instances=0 \
          --max-instances=1 \
          --cpu=1 \
          --memory=512Mi \
          --set-env-vars="OPENAI_API_KEYS=${{ secrets.OPENAI_API_KEYS }}" \
          --set-env-vars="PEXELS_API_KEY=${{ secrets.PEXELS_API_KEY }}" \
          --set-env-vars="YOUTUBE_CLIENT_ID=${{ secrets.YOUTUBE_CLIENT_ID }}" \
          --set-env-vars="YOUTUBE_CLIENT_SECRET=${{ secrets.YOUTUBE_CLIENT_SECRET }}" \
          --set-env-vars="YOUTUBE_REFRESH_TOKEN=${{ secrets.YOUTUBE_REFRESH_TOKEN }}" \
          --set-env-vars="ELEVENLABS_API_KEY=${{ secrets.ELEVENLABS_API_KEY }}" \
          --set-env-vars="GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}"

    - name: Trigger Job
      run: gcloud run services call $SERVICE_NAME --region $REGION --data '{"message":"start"}'
