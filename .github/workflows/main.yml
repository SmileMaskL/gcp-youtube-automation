name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: youtube-fully-automated
  SERVICE_NAME: youtube-auto-upload
  REGION: us-central1

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Cloud SDK 세팅 + 서비스계정 인증
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SERVICE_KEY }}
          export_default_credentials: true

      - name: Authenticate Docker to Artifact Registry
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Build and Push Docker image
        run: |
          docker build -t us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }} .
          docker push us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }} \
            --platform managed \
            --region ${{ env.REGION }} \
            --memory 1Gi \
            --timeout 900s \
            --allow-unauthenticated \
            --port 8080 \
            --set-env-vars="YOUTUBE_CLIENT_SECRET=${{ secrets.YOUTUBE_CLIENT_SECRET }}"

      # (선택) 서비스 확인 트리거
      - name: Trigger service
        run: |
          URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} --platform managed --region ${{ env.REGION }} --format 'value(status.url)')
          curl -X POST "$URL/upload" -H "Content-Type: application/json"
