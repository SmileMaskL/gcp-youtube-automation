name: Auto Build, Deploy, and Trigger YouTube Bot

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 3,9,15,21 * * *' # 하루 4번 실행 (한국 기준 오전 12시, 6시, 정오, 6시)

env:
  PROJECT_ID: youtube-full-automated
  GCP_REGION: us-central1
  IMAGE_NAME: yt-auto-bot
  REPOSITORY_NAME: youtube-bot-repo

jobs:
  build-deploy-run:
    runs-on: ubuntu-latest

    steps:
    - name: ✅ GitHub 코드 가져오기
      uses: actions/checkout@v4

    - name: ✅ Docker Buildx 설정
      uses: docker/setup-buildx-action@v3

    - name: ✅ GCP Artifact Registry 로그인
      uses: docker/login-action@v3
      with:
        registry: us-central1-docker.pkg.dev
        username: _json_key
        password: ${{ secrets.GCP_SERVICE_KEY }}

    - name: ✅ Docker 이미지 빌드
      run: |
        docker build -t $IMAGE_NAME .

    - name: ✅ Docker 이미지 태그 및 푸시
      run: |
        docker tag $IMAGE_NAME us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}
        docker push us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}

    - name: ✅ GCP 인증 (App Engine용)
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_KEY }}

    - name: ✅ Cloud Run에 배포
      run: |
        gcloud config set project $PROJECT_ID
        gcloud run deploy gcp-youtube-automation \
          --image us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }} \
          --platform managed \
          --region $GCP_REGION \
          --allow-unauthenticated \
          --memory 1Gi \
          --timeout 900s

    - name: ✅ 자동화 트리거 실행
      run: |
        URL=$(gcloud run services describe gcp-youtube-automation \
          --platform managed \
          --region $GCP_REGION \
          --format="value(status.url)")
        echo "🚀 Running automation at $URL"
        curl -X POST "$URL/run" -H "Content-Type: application/json"
