name: GCP YouTube Automation CI/CD

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  SERVICE_NAME: gcp-youtube-automation
  REGION: us-central1
  PROJECT_ID: youtube-fully-automated
  WORKLOAD_IDENTITY_PROVIDER: "projects/94662874801/locations/global/workloadIdentityPools/github-actions-pool/providers/github-provider-v1"
  audience: "https://token.actions.githubusercontent.com"
  SERVICE_ACCOUNT: github-actions-sa@youtube-fully-automated.iam.gserviceaccount.com

permissions:
  contents: read
  id-token: write

jobs:
  setup-auth:
    runs-on: ubuntu-latest
    outputs:
      project_id: ${{ steps.set-project-id.outputs.project_id }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: set-project-id
        run: echo "project_id=${{ env.PROJECT_ID }}" >> $GITHUB_OUTPUT

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          token_format: access_token
          access_token_scopes: "https://www.googleapis.com/auth/cloud-platform"

  deploy:
    runs-on: ubuntu-latest
    needs: setup-auth
    env:
      PROJECT_ID: ${{ needs.setup-auth.outputs.project_id }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate thumbnail
        run: python3 src/thumbnail_generator.py

      - name: Post comment
        run: python3 src/comment_poster.py

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker asia-northeast3-docker.pkg.dev

      - name: Load secrets from Secret Manager
        run: |
          declare -A secret_map=(
            ["OPENAI_API_KEY"]="openai-api-keys"
            ["GEMINI_API_KEY"]="gemini-api-key"
            ["ELEVENLABS_API_KEY"]="elevenlabs-api-key"
            ["YOUTUBE_CREDENTIALS"]="youtube-oauth-credentials"
            ["STORAGE_BUCKET"]="storage-bucket-name"
            ["PEXELS_API_KEY"]="PEXELS_API_KEY"
          )

          for env_var in "${!secret_map[@]}"; do
            secret_name=${secret_map[$env_var]}
            secret_value=$(gcloud secrets versions access latest --secret=$secret_name --project=$PROJECT_ID --format="get(payload.data)" | tr '_-' '/+' | base64 -d)
            echo "$env_var=$secret_value" >> $GITHUB_ENV
          done

  generate-content:
    runs-on: ubuntu-latest
    needs: deploy
    if: ${{ always() }}
    env:
      PROJECT_ID: ${{ needs.setup-auth.outputs.project_id }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          token_format: access_token

      - name: Setup gcloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Generate and Upload Video Content
        env:
          OPENAI_API_KEY: ${{ env.OPENAI_API_KEY }}
          GEMINI_API_KEY: ${{ env.GEMINI_API_KEY }}
          ELEVENLABS_API_KEY: ${{ env.ELEVENLABS_API_KEY }}
          YOUTUBE_CREDENTIALS: ${{ env.YOUTUBE_CREDENTIALS }}
          STORAGE_BUCKET: ${{ env.STORAGE_BUCKET }}
          PEXELS_API_KEY: ${{ env.PEXELS_API_KEY }}
        run: |
          python3 src/content_generator.py
          python3 src/video_creator.py
          python3 src/thumbnail_generator.py
          python3 src/youtube_uploader.py

      - name: Trigger Cloud Run Job
        run: |
          gcloud run jobs run $SERVICE_NAME \
            --region $REGION \
            --project $PROJECT_ID
