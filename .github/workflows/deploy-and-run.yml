# .github/workflows/deploy-and-run.yml

name: Deploy and Run Cloud Function

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 3,7,12,18,22 * * *' # Îß§Ïùº 5Ìöå Ïã§Ìñâ (KST Í∏∞Ï§Ä 12Ïãú, 16Ïãú, 21Ïãú, ÏùµÏùº 03Ïãú, 07Ïãú)

env:
  GCP_PROJECT_ID: youtube-fully-automated
  GCP_BUCKET_NAME: youtube-fully-automated_cloudbuilde
  FUNCTION_NAME: youtube-shorts-automation
  REGION: us-central1

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: ‚úÖ Checkout Repository
        uses: actions/checkout@v4

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: üì¶ Install dependencies
        run: |
          if [ -f src/requirements.txt ]; then
            pip install -r src/requirements.txt
          else
            echo "‚ùå requirements.txt not found in src/"
            exit 1
          fi

      - name: üîê Authorize GCP Service Account
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

      - name: ‚òÅÔ∏è Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: üöÄ Deploy Cloud Function
        run: |
          gcloud functions deploy ${{ env.FUNCTION_NAME }} \
            --runtime=python311 \
            --region=${{ env.REGION }} \
            --source=./src \
            --entry-point=youtube_automation_main \
            --trigger-http \
            --allow-unauthenticated \
            --memory=2048MB \
            --timeout=540s \
            --gen2 \
            --service-account=${{ secrets.WIF_SERVICE_ACCOUNT }} \
            --set-env-vars="GCP_PROJECT_ID=${{ env.GCP_PROJECT_ID }},GCP_BUCKET_NAME=${{ env.GCP_BUCKET_NAME }},ELEVENLABS_VOICE_ID=${{ secrets.ELEVENLABS_VOICE_ID }}"

      - name: üåê Invoke Cloud Function (Scheduled Run)
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        run: |
          FUNCTION_URL=$(gcloud functions describe ${{ env.FUNCTION_NAME }} \
            --region=${{ env.REGION }} \
            --format="value(serviceConfig.uri)")
          echo "‚úÖ Cloud Function URL: $FUNCTION_URL"
          curl -X POST \
            -H "Content-Type: application/json" \
            -d '{"daily_run": true}' \
              "${FUNCTION_URL}"

      - name: List src directory contents
        run: ls -l src/
